--- src/glog/vlog_is_on.h.in 2015-03-11 07:02:27.000000000 +0300
+++ src/glog/vlog_is_on.h.in 2018-01-30 11:28:15.000000000 +0300
@@ -73,6 +73,21 @@
 #endif

 #if defined(__GNUC__)
+
+#ifdef THREAD_SANITIZER
+}
+extern "C" {
+void AnnotateIgnoreReadsBegin(const char *file, int line);
+void AnnotateIgnoreReadsEnd(const char *file, int line);
+}
+#define GLOG_IGNORE_READS_BEGIN() AnnotateIgnoreReadsBegin(__FILE__, __LINE__)
+#define GLOG_IGNORE_READS_END() AnnotateIgnoreReadsEnd(__FILE__, __LINE__)
+namespace google {
+#else
+#define GLOG_IGNORE_READS_BEGIN()
+#define GLOG_IGNORE_READS_END()
+#endif
+
 // We emit an anonymous static int* variable at every VLOG_IS_ON(n) site.
 // (Normally) the first time every VLOG_IS_ON(n) site is hit,
 // we determine what variable will dynamically control logging at this site:
@@ -83,10 +98,15 @@
   __extension__  \
   ({ static @ac_google_namespace@::int32* vlocal__ = &@ac_google_namespace@::kLogSiteUninitialized;           \
      @ac_google_namespace@::int32 verbose_level__ = (verboselevel);                    \
+     GLOG_IGNORE_READS_BEGIN();                                                        \
+     bool result =                                                                     \
      (*vlocal__ >= verbose_level__) &&                          \
      ((vlocal__ != &@ac_google_namespace@::kLogSiteUninitialized) ||                   \
       (@ac_google_namespace@::InitVLOG3__(&vlocal__, &FLAGS_v,                         \
-                   __FILE__, verbose_level__))); })
+                   __FILE__, verbose_level__)));                                       \
+     GLOG_IGNORE_READS_END();                                                          \
+     result;                                                                           \
+  })
 #else
 // GNU extensions not available, so we do not support --vmodule.
 // Dynamic value of FLAGS_v always controls the logging level.
